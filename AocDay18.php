<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



$inputData = ("#################################################################################
#.............#.....#.................#.#.....#...#.......#...................#a#
#.#####.#######.#.###.#########.#####.#.#.###Y###.#.#####.#.#####.###########.#.#
#.#...#.#.....#.#..c#.........#...#.#...#...#.#...#.#.#...#.#.#...#...#...#.....#
#.#.###.#.###.#.###.#.###########.#.###.#.#.#.#.#.#.#.#.#.#.#.#.###.#.#.#.#######
#.#...#...#.#...#.#...#...........#.#...#.#.#...#.#.#.#.#.#.#.#...#.#.#.#.#.....#
#.#.#.#####.#####.#####.###.#######.#.###.#.#######.#.#.###.#.###.#.#.#.#.#.###.#
#.#.#.............#.#...#.#.#..e..#.....#.#...........#...#.#...#...#...#.....#.#
#.#########.#####.#.#.###.#.#.###.#####.#.###############.#T#.#.###############.#
#...#..k....#.....#.#.Z.#...#...#.....#.#.........#.#.....#.#.#.....#.L.....#...#
###.#.#.#######.###.###.#######.#####.#.#########.#.#.###.#.#.###.#.###.###.#.###
#...#.#.#.....#.#...#...#.....#.....#.#.#...#...#.#.#.#...#.#.#...#...#.#...#...#
#.###.#.#.###.#.#.###.###.###.#####.#.#.#.#.#.#.#.#.#.###.#.###.#####.#.#.#####.#
#.#...#.#.#...#.#...#.....#.#.....#.#.#.#.#...#...#.#...#.#.#...#.#...#.#.#.....#
#.###.#.#.#.###.###.#######.#.#####.#.#.#.#########.###.###.#.###.#.###.#.#.###.#
#...#.#.#.#...#...#.........#.#.....#.#.#.............#.......#...#.#...#.#...#.#
###.#.###.###.###.###.#.#####.#.#####.###############.#########.#.#.###.#.###.#.#
#.....#...#...#.J...#.#.#.....#.....#...#...........#.#...#...#.#.......#...#.#.#
#######.###.#######.#.###.#####.#######.#########.#.#.###.#.#.#########.#####.#.#
#.......#.#...#...#...#...#...#.#.......#.....O.#.#.#.#...#.#.......#...#.....#s#
#.#######.###.#.#.#####.###.#.#.#.#######.#####.#.#.#.#.###.#####.#.#.###.#####.#
#...#...#...#...#...#.#.#...#...#.......#.....#.#.#.#.#...#.#...#.#.#...#...#...#
###.#.#.#.#########.#.#.#.#######.#####.#.#####.#.###.###.#.###.###.#.#####.#.###
#.#...#.#.........#...#...#....d#.....#.#.#.....#.#...#...#.#.#...#.#.#.....#.#.#
#.#####.#######.#######.###.###.#####.#.#.#.#####.#.###.#.#.#.###.#.#.#.#####.#.#
#...#.#.......#.......#...#.#...#.....#.#.#.....#.......#.#.....#.#.#.#.#.......#
#.#.#.#######.#.#.#####.###.#.#####.###.#.#####.#############.###.#.#.#.#######.#
#.#...#.....#.#.#...#...#...#.....#...#.#.#...#.#...........#.#...#.#.#.#...#.#.#
#.###.###.#.#.#.###.#.###.#######.#####.#.###.#.#.#########.#.#.###.#.#.#.#.#.#.#
#...#.....#.#.#...#...#...#.......#.....#...#.#.#.....#...#...#...#.#.#...#.#...#
#.#.#######.#.###.#####.###.#######.#######.#.#.#####.###.#######.#.#####.#.#.###
#.#.#.....#.#.#.#.#.#...#.#.#...#...#...#...#.#.....#...#.....#...#.....#.#.#w#.#
#.#.#.###.#.#.#.#.#.#.###.#.#.#.###.#.#.#.###.#.###.###.#.###.#.###.###.###.#.#.#
#.#.#.#.#.#.#.#.#.#.#.#m..#...#...#...#.#.#...#...#...#.#...#.#.#.....#.#...#.#.#
###.#.#.#.###W#.#.#.#.#.#########.#####.#.#.#.###.#####.###.#.#.#######.#.###.#.#
#...#...#.#...#.....#.#.......#...#...#.#.#.#.#.#.....#.....#.#.........#.#.#...#
#.###.###.#.###.#####.#.###.###.###.#.#.#.#.#.#.#####.#######.###########.#.###.#
#.#...#...#.#...#.S...#...#.....#...#.#.#...#.....#.#.........#...#...#...#.....#
#.#.###.###.#####.#######.#######.###.#.#########.#.###########.#.#.#.#.###.#####
#.....#...........#.......F.......#..................f..........#...#...#.......#
#######################################.@.#######################################
#.....#.#...........#.....#.........................#...#.....#.M.......#.....#.#
###P#.#.#.#######.###.###.#.#######.###.#.#########.#.#.#.###.###.#####.###.#.#.#
#...#...#...#.#...#.....#.#.#.......#...#...#.........#...#.......#...#.....#.#.#
#.#.#######.#.#.###.#####.#.#.#######.#####.###############.#########.#######.#.#
#.#.#.....#.#.#.#...#...#.#.#.#.........#...#.......#...#.....#.....#.#.......#.#
#.###.###.#.#.#.#.###.#.#.#.#.###########.###.#####.#.#.#######.###.#.#.#######.#
#...#.#.#.#...#.#.#...#...#.#...........#...#...#.#...#.......#.#.#.#.#.........#
#.#.#.#.#.#.###.#.#.#####.#######.#####.###.###.#.###########.#.#.#.#.#.#######.#
#.#.#...#...#...#.#r#.....#.....#.....#.#...#.#.#.......#...#.....#.#...#.....#.#
#.#.###.#####.###.#.#######.###.#####.#.#.#.#.#.###.#####.#.#######.#.###.###.#.#
#.#...#.#...#...#.#.........#...#...#.#.#.#...#...#.#.....#.#......p#...#.#.#.#.#
###.#.#.#.#.###.#.###########.###.#.#.#.#.###.###.#.#.#####.#.###.#######.#.#.###
#...#.#.#.#...#.......#.....#.#...#...#.#...#.#...#.....#...#.#...#.K...#.#.#...#
#.#####.#.###.#######.#.###Q#.#.#######.###.#.#.#####.###.###.#.###.###.#.#.###.#
#.....#...#...#.#...#.#.#.#...#...#.....#...#.#.....#.#...#...#.#...#.#..j#.#...#
#.###.#####.###.#.#.###.#.#########.###.#.#########.###.#.#.###.#.###.#####.#.###
#...#.#.....#...#.#.B...#...#...#...#...#.#.......#.....#.#...#.#...........#.R.#
#.###.#.#######.#.#######.#.#.#.#.###.###.#.#.###.#######.###.###.#############.#
#.#...#.......#.#n....#...#.#.#...#...#.#...#...#.....#...#.#.....#..u..#.....#.#
###.#.#######.#.#####.#.###.#.#####.###.#.#####.###.###.###.###.###.###.#.###.#.#
#...#.#...#...#.....#.#.#...#...#.#...#.#...#...#...#...#...#.#.#...#...#.#...#.#
#.#####.#.#.###.#.#####.#.###.#.#.###.#.#####.#######.#####.#.###.###.###.###.#.#
#...#...#.#.#...#.......#.#...#.#...#...#.....#.......#.....#.U...#.#...#...#...#
#.#.#.###.#.#.#########.#.#####.###.###.#.#.###.#######.###########.###X#.#.###.#
#.#..l#...#.#...#.......#.....#...#...#.#.#o#...#.#.....#...#......x....#.#.#...#
#.#####C###.#.###.###########.###.#.###.#.###.###.#.###.#.#.#I#############.#.###
#.....#...#.#.#...#...#.....#.#...#.#...#.#...#.....#...#.#...#v......G.#...#..q#
###.#####.#.###.###.#.#.###.#.#.###.#.###.#.###.#####.#.#.#####.#######.#.#####.#
#.#y#...#.#...#.#...#.#...#.#...#...#...#.#.#...#.....#.#..i..#...#.....#...#...#
#.#.#.#.#.###.#.#.###.#.#.#.#####.#.###.#.#.###.#.###########H#.#.#.#####.#.#.###
#...#.#.#...#.#.....#.#.#.#.#...#.#.....#.#...#.#...........#.#.#.#g..#...#.#...#
#.###.#.###A#.#######.#.#.#.#.###.#######.###.#.#########.#.#.#.#.###.#####.###.#
#.#...#.....#.........#.#.#.#.#...#.....#...#.#.......#...#.#.#.#.#.#.#...#...#.#
###.#####################.#.#.#.#####.###.#.#.#########.###.#.###.#.#.#.#.###.#.#
#...#.......#.............#..t#.#...#...#.#.#.#.......#.#...#...#.#.#.N.#.....#.#
#.###.#####.#.#########.#######.#.#D#.#.#.#.#.#.#####.#.#.#####.#.#.###########.#
#.#...#...#..z#.#.......#.....#...#.#.#.#.#.#...#...#...#.#.#..h#.#.....#......b#
#.#.###.#.#####.#.#######.###.#####.###.#.#.#####.#.#####.#.#.###.#.###.#.#######
#.......#.......#...........#...........#.#.....E.#.........#...V.#...#.........#
#################################################################################");


//$inputData = str_replace(" ", "", $inputData);

$arrayInfo = explode("\n",$inputData);

$keys = array();
$doors = array();
$startingPoint = '0,0';

foreach($arrayInfo as $key => $value) {
    $items = str_split($value);
    foreach($items as $key2 => $value2) {
        $grid[$key][$key2] = $value2;
        if($value2=='@') {
            $startingPoint = $key . "," . $key2;
        }
        if(!ctype_alpha($value2)) continue;
        if(ctype_lower($value2)) {
            $keys[$value2] = $key . "," . $key2;
        }
        if(ctype_upper($value2)) {
            $doors[$value2] = $key . "," . $key2;
        }
    }
}

echo $startingPoint;
echo "<br>";
var_dump($doors);

var_dump($keys);



   
function findPath(&$createdGrid, $startingX, $startingY, $targetLocation, $xPositionParent = 0, $yPositionParent = 0, $foundKeys, $moveCount, $keys) {
    
    $blocked = 0;             
    $lastX = $xPosition;
    $lastY = $yPosition;   
    while($blocked < 1) { 
        $doorAbove = ((($createdGrid[$xPosition-1][$yPosition] == '.' || in_array($createdGrid[$xPosition-1][$yPosition],$foundKeys)) && !($xPosition-1==$xPositionParent && $yPosition==$yPositionParent) && !($xPosition-1==$lastX && $yPosition==$lastY)) ? 1:0);
        $doorBelow = ((($createdGrid[$xPosition+1][$yPosition] == '.' || in_array($createdGrid[$xPosition+1][$yPosition],$foundKeys)) && !($xPosition+1==$xPositionParent && $yPosition==$yPositionParent) && !($xPosition+1==$lastX && $yPosition==$lastY)) ? 1:0);
        $doorLeft = ((($createdGrid[$xPosition][$yPosition-1] == '.' || in_array($createdGrid[$xPosition][$yPosition-1],$foundKeys)) && !($xPosition==$xPositionParent && $yPosition-1==$yPositionParent) && !($xPosition==$lastX && $yPosition-1==$lastY)) ? 1:0);
        $doorRight = ((($createdGrid[$xPosition][$yPosition+1] == '.' || in_array($createdGrid[$xPosition][$yPosition+1],$foundKeys)) && !($xPosition==$xPositionParent && $yPosition+1==$yPositionParent) && !($xPosition==$lastX && $yPosition+1==$lastY)) ? 1:0);
        $totalDoorCount = $doorAbove + $doorBelow + $doorLeft + $doorRight;
        $keyAbove = (((!in_array($createdGrid[$xPosition-1][$yPosition],$foundKeys) && in_array($createdGrid[$xPosition-1][$yPosition],$keys)) && !($xPosition-1==$xPositionParent && $yPosition==$yPositionParent) && !($xPosition-1==$lastX && $yPosition==$lastY)) ? 1:0);
        $keyBelow = (((!in_array($createdGrid[$xPosition+1][$yPosition],$foundKeys) && in_array($createdGrid[$xPosition+1][$yPosition],$keys)) && !($xPosition+1==$xPositionParent && $yPosition==$yPositionParent) && !($xPosition+1==$lastX && $yPosition==$lastY)) ? 1:0);
        $keyLeft = (((!in_array($createdGrid[$xPosition][$yPosition-1],$foundKeys) && in_array($createdGrid[$xPosition][$yPosition-1],$keys)) && !($xPosition==$xPositionParent && $yPosition-1==$yPositionParent) && !($xPosition==$lastX && $yPosition-1==$lastY)) ? 1:0);
        $keyRight = (((!in_array($createdGrid[$xPosition][$yPosition+1],$foundKeys) && in_array($createdGrid[$xPosition][$yPosition+1],$keys)) && !($xPosition==$xPositionParent && $yPosition+1==$yPositionParent) && !($xPosition==$lastX && $yPosition+1==$lastY)) ? 1:0);
        $totalKeyCount = $keyAbove + $keyBelow + $keyLeft + $keyRight;
        
        if($doorAbove==0 && $doorBelow==0 && $doorLeft==0 && $doorRight==0 && $keyAbove==0 && $keyBelow==0 && $keyLeft==0 && $keyRight==0) {
            //echo "ii";
            $blocked = 1;
            continue;
        }
        if($totalDoorCount>1) {
            //echo "doors<br>";
            // Multiple doors!
            if($doorAbove==1) {
                findPath($createdGrid,$xPosition-1,$yPosition,$xPosition,$yPosition, $foundKeys, $moveCount, $keys);
            }
            if($doorBelow==1) {
                //echo "hi $doorCount";
                pathFinder($createdGrid,$xPosition+1,$yPosition,$xPosition,$yPosition, $foundKeys, $moveCount, $keys);
            }
            if($doorLeft==1) {                
                pathFinder($createdGrid,$xPosition,$yPosition-1,$xPosition,$yPosition, $foundKeys, $moveCount, $keys);
            }
            if($doorRight==1) {
                pathFinder($createdGrid,$xPosition,$yPosition+1,$xPosition,$yPosition, $foundKeys, $moveCount, $keys);
            }
            $blocked = 2;
            continue;
        } elseif($totalDoorCount==1) {
            $lastX = $xPosition;
            $lastY = $yPosition;
            //echo "door<br>";
            //Single door!
            if($doorAbove==1) {
                $xPosition = $xPosition -2;
            } elseif($doorBelow==1) {
                $xPosition = $xPosition +2;
            } elseif($doorLeft==1) {
                $yPosition = $yPosition-2;
            } elseif($doorRight==1) {
                $yPosition = $yPosition+2;
            }
            $moveCount++;
        }
        
        if($totalKeyCount>0) {
            //echo "doors<br>";
            // Multiple doors!
            if($doorAbove==1) {
                findPath($createdGrid,$xPosition-1,$yPosition,$xPosition,$yPosition, $foundKeys, $moveCount, $keys);
            }
            if($doorBelow==1) {
                //echo "hi $doorCount";
                pathFinder($createdGrid,$xPosition+1,$yPosition,$xPosition,$yPosition, $foundKeys, $moveCount, $keys);
            }
            if($doorLeft==1) {                
                pathFinder($createdGrid,$xPosition,$yPosition-1,$xPosition,$yPosition, $foundKeys, $moveCount, $keys);
            }
            if($doorRight==1) {
                pathFinder($createdGrid,$xPosition,$yPosition+1,$xPosition,$yPosition, $foundKeys, $moveCount, $keys);
            }
            $blocked = 2;
            continue;
        }
        
        
        
        
    }

    if($blocked==1){        
        $pathOptions[] = array('EndLocation' => "$xPosition,$yPosition", 'totalDoors' => $doorCount);
    }
    return $moveCount;
}





